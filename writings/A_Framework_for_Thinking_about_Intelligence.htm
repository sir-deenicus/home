<meta http-equiv='Content-Type' content='Type=text/html; charset=utf-8'>
<link rel='stylesheet' href='../style.css'>
<p>| <a href="/">Root</a> | <a href="/writings">Articles &amp; Essays</a> | <a href="/lab">Lab.Project Int.Aug</a> | <a href="#">Project Int.Aug</a></p>
<h1>A Framework for Thinking about Intelligence</h1>

<p>A good definition of intelligence should:</p>

<ol>
<li>Include the concept of Kolmogorov Complexity, Entropy, Prediction and Compression</li>
<li>Be able to bridge compression and search; that is, systems which Search should also count as intelligent and not be labeled as merely "brute force".</li>
<li>Capture the notion of Latent vs Active Intelligence (analogizing with Potential vs Kinetic Energy).</li>
<li>Be able to easily categorize a large manner of objects: humans, bots, evolution, corporations, a rock, traffic.</li>
<li>Is not trivial in its acceptance of what constitutes intelligence</li>
<li>Allow a person to think more productively and consistently about the conept of Intelligence when compared to someone not using this framework.</li>
</ol>

<h2>What Intelligence is Not</h2>

<p>To start with, it's worth discussing what intelligence is not. The distinctions made herein are based on experience; they're what allow someone utilizing this framework to reason more adeptly about intelligent systems. These statements should not be considered as truths but instead, basic definitions for the framework.</p>

<ul>
<li>Intelligence is <em>more</em> than Search</li>
<li>Intelligence is not Goal Orientation
<ul>
<li>Agency deals with Goal Orientation</li>
</ul></li>
<li>Intelligence is independent of Consciousness.</li>
<li>Furthermore, Goal Orientation is independent of Consciousness and, Consciousness is a specific form of self-awareness.
<ul>
<li>Conscious is anything that can pass the Turing Test--it is human specific--many things can be self aware, intelligent and goal orientated (we will call them sentient) without passing for what a human would call conscious.</li>
</ul></li>
</ul>

<p>With that, and once a framework satisfying (1)-(5) is met, then criterion (6) will also be met.</p>

<h2>What is Intelligence?</h2>

<p>One obvious definition is that anything able to learn is intelligent. This can be further refined by replacing learning with: the ability to make predictions about one's environment, i.e. the ability to compress the set of signals received from the environment into a model of said environ.</p>

<p>Although this passed criteria (1),(4) and (5) it fails on (2) and (3). This is because we wish to be able to talk about chess engines and deduction engines as posessing a restricted form of intelligence. They cannot learn but they can reason in a limited way. To remedy this we'll have to relook at learning.</p>

<h3>What is Learning?</h3>

<p>Learning is Search. Optimization is search under a given utility function, and there are many kinds of relaxations to make search easier (e.g. a differentiable space so you can tell what direction to go to improve, smooth so differentiation is easy and convex so there's a global). All learning algorithms are performing some kind of search over parameters defining some model. At the end, this model is a compressed representation of the met data. After this, new examples</p>

<p>Chess and deduction engines are also performing a search, but they do it in real time--often the utility function is more directly specific to the problem and thus learning a model is omitted.</p>

<p>Here's a key point I'll focus on in a later essay, <em>Speed and Memory reduce the need for learning</em>. Because computers have speed, they can exhibit what would in humans be called intelligence without ever having to learn any "tricks" (i.e. abstractions) first.</p>

<p><a href="https://en.wikipedia.org/wiki/Autoencoder">https://en.wikipedia.org/wiki/Autoencoder</a></p>

<p><a href="http://arxiv.org/abs/1009.5104">http://arxiv.org/abs/1009.5104</a></p>

<p>matrix factorization</p>

<p>Intelligence is any program that exploits the structure of a search space in order to reduce the energy spent on computations on said space while coming close to the optimum that would be reached with an exhaustive search. Furthermore, this program should be able to answer queries about the search space. An intelligent program is said to be capable of learning over its inputs if it computes an output that is a generalization (whether interpolated or a theroy*), that is, it achieves a compression. An intelligent program will also have a utility function whether explicit as in optimizers and searchers or implicit as in databases (query matches).</p>
